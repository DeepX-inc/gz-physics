load(
    "//ign_bazel:build_defs.bzl",
    "IGNITION_FEATURES",
    "IGNITION_ROOT",
    "IGNITION_VISIBILITY",
    "generate_include_header",
    "ign_config_header",
    "ign_export_header",
)

package(
    default_visibility = IGNITION_VISIBILITY,
    features = IGNITION_FEATURES,
)

sources = glob(["src/*.cc", "src/*.hh"], exclude=["src/*_TEST.cc"])

test_sources = glob(["src/*_TEST.cc"], exclude=["src/SDFFeatures_TEST.cc"])

public_headers = [
    "include/ignition/physics/dartsim/World.hh",
]

cc_library(
    name = "dartsim",
    srcs = sources,
    hdrs = public_headers,
    includes = [
        "include",
        "src",
    ],
    alwayslink = 1,
    deps = [
        IGNITION_ROOT + "dart",
        IGNITION_ROOT + "ign_common/graphics",
        IGNITION_ROOT + "ign_common/profiler",
        IGNITION_ROOT + "ign_math/eigen3",
        IGNITION_ROOT + "ign_physics",
        IGNITION_ROOT + "ign_plugin/register",
        IGNITION_ROOT + "sdformat",
    ],
)

cc_binary(
    name = "libignition-physics-dartsim-plugin.so",
    includes = [
        "include",
        "src",
    ],
    linkshared = True,
    deps = [":dartsim"],
)

[cc_test(
    name = src.replace("/", "_").replace(".cc", "").replace("src_", ""),
    srcs = [
        src,
        "src/Base.hh",
    ],
    data = [
        "worlds",
        ":libignition-physics-dartsim-plugin.so",
        "//ign_physics:resources",
    ],
    includes = ["src"],
    local_defines = [
        "tpe_plugin_LIB='\"\"'",
        "bullet_plugin_LIB='\"\"'",
        "TEST_WORLD_DIR='\"./ign_physics/dartsim/worlds/\"'",
        "IGNITION_PHYSICS_RESOURCE_DIR='\"./ign_physics/resources/\"'",
    ],
    deps = [
        IGNITION_ROOT + "ign_physics",
        IGNITION_ROOT + "ign_physics/test:test_utils",
        ":dartsim",
        "@gtest",
        "@gtest//:gtest_main",
    ],
) for src in test_sources]
