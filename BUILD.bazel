load(
    "//ign_bazel:build_defs.bzl",
    "IGNITION_FEATURES",
    "IGNITION_ROOT",
    "IGNITION_VISIBILITY",
    "generate_include_header",
    "ign_config_header",
    "ign_export_header",
)

package(
    default_visibility = IGNITION_VISIBILITY,
    features = IGNITION_FEATURES,
)

licenses(["notice"])

exports_files(["LICENSE"])

PROJECT_NAME = "ignition-physics"

PROJECT_MAJOR = 4

PROJECT_MINOR = 1

PROJECT_PATCH = 0

# Generates config.hh based on the version numbers in CMake code.
ign_config_header(
    name = "config",
    src = "include/ignition/physics/config.hh.in",
    cmakelists = ["CMakeLists.txt"],
    extra_defines = [
        "IGNITION_PHYSICS_ENGINE_INSTALL_DIR=foobar",
    ],
    project_name = PROJECT_NAME,
    project_version = (PROJECT_MAJOR, PROJECT_MINOR, PROJECT_PATCH),
)

ign_export_header(
    name = "include/ignition/physics/Export.hh",
    export_base = "IGNITION_PHYSICS",
    lib_name = "ignition-physics",
    visibility = ["//visibility:private"],
)

public_headers_no_gen = glob([
    "include/ignition/physics/*.hh",
    "include/ignition/physics/detail/*.hh"
])

sources = glob(["src/*.cc"], exclude=["src/*_TEST.cc"])

test_sources = glob(["src/*_TEST.cc"])

generate_include_header(
    name = "physicshh_genrule",
    out = "include/ignition/physics.hh",
    hdrs = public_headers_no_gen + [
        "include/ignition/physics/config.hh",
        "include/ignition/physics/Export.hh",
    ],
)

public_headers = public_headers_no_gen + [
    "include/ignition/physics/config.hh",
    "include/ignition/physics/Export.hh",
    "include/ignition/physics.hh",
    "src/utils/TestDataTypes.hh",
    "src/TestUtilities.hh",
]

cc_library(
    name = "mesh",
    hdrs = glob([
        "mesh/include/ignition/physics/mesh/*.hh",
        "mesh/include/ignition/physics/mesh/**/*.hh",
    ]),
    includes = ["mesh/include"],
)

cc_library(
    name = "sdf",
    hdrs = glob(["sdf/include/ignition/physics/sdf/*.hh"]),
    includes = ["sdf/include"],
    deps = [
        IGNITION_ROOT + "sdformat",
    ],
)

cc_library(
    name = "ign_physics",
    srcs = sources,
    hdrs = public_headers,
    includes = ["include"],
    deps = [
        ":mesh",
        ":sdf",
        "@eigen3",
        IGNITION_ROOT + "ign_bazel:utilities",
        IGNITION_ROOT + "ign_common",
        IGNITION_ROOT + "ign_math",
        IGNITION_ROOT + "ign_plugin/loader",
    ],
)

[cc_test(
    name = src.replace("/", "_").replace(".cc", "").replace("src_", ""),
    srcs = [src],
    deps = [
        ":ign_physics",
        IGNITION_ROOT + "ign_physics/test:test_utils",
        "@gtest",
        "@gtest//:gtest_main",
    ],
) for src in test_sources]

exports_files(["resources"])
